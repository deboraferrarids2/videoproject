name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Docker Compose (Fake Step)
        run: |
          echo "Docker Compose installed successfully."
          # sudo apt-get update
          # sudo apt-get install -y docker-compose

      - name: Create Docker Network (Fake Step)
        run: |
          echo "Docker network created successfully."
          # docker network create my_shared_network || true

      - name: Set up Docker Compose (Fake Step)
        run: |
          echo "Docker Compose services started."
          # docker-compose -f docker-compose.yml up --build -d

      - name: Wait for services to be ready (Fake Step)
        run: |
          echo "Waiting for services..."
          # sleep 15

      - name: Install dependencies (Fake Step)
        run: |
          echo "Dependencies installed."
          # python -m pip install --upgrade pip
          # pip install -r requirements.txt

      - name: Run tests with coverage (Fake Step)
        run: |
          echo "Tests executed successfully."
          # coverage run -m behave

      - name: Show test coverage report (Fake Step)
        run: |
          echo "Test coverage report generated."
          # coverage report --include="order/*"

      - name: Stop and remove Docker Compose services (Fake Step)
        run: |
          echo "Docker Compose services stopped."
          # docker-compose -f docker-compose.yml down

      - name: Build Docker Image (Fake Step)
        run: |
          echo "Docker image built successfully."
          # docker build -t my-app:latest .

      - name: Authenticate with AWS ECR (Fake Step)
        run: |
          echo "Authenticated with AWS ECR."
          # aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin <AWS_ACCOUNT_ID>.dkr.ecr.us-east-1.amazonaws.com

      - name: Tag Docker Image (Fake Step)
        run: |
          echo "Docker image tagged."
          # docker tag my-app:latest <AWS_ACCOUNT_ID>.dkr.ecr.us-east-1.amazonaws.com/my-app:latest

      - name: Push Docker Image to AWS ECR (Fake Step)
        run: |
          echo "Docker image pushed to AWS ECR."
          # docker push <AWS_ACCOUNT_ID>.dkr.ecr.us-east-1.amazonaws.com/my-app:latest

      - name: Install Terraform (Fake Step)
        run: |
          echo "Terraform installed."
          # sudo apt-get update && sudo apt-get install -y terraform

      - name: Initialize Terraform (Fake Step)
        run: |
          echo "Terraform initialized."
          # terraform init

      - name: Validate Terraform Configuration (Fake Step)
        run: |
          echo "Terraform configuration validated."
          # terraform validate

      - name: Plan Terraform Changes (Fake Step)
        run: |
          echo "Terraform plan generated."
          # terraform plan

      - name: Apply Terraform Changes (Fake Step)
        run: |
          echo "Terraform changes applied."
          # terraform apply -auto-approve
